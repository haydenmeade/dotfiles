# Enable mouse control (clickable windows, panes, resizable panes)
set -g mouse on

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# vi mode
set-window-option -g mode-keys vi
# vim key bindings for clipboard
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 

# renumber windows when the non-last window is closed
set-option -g renumber-windows on

# set escape timeout to 0 so it doesn't interfere with vim
set -sg escape-time 0

# reload config file
bind r source-file ~/.config/tmux/tmux.conf

# split panes using | and -
bind | split-window -h -p 25 -c '#{pane_current_path}'
bind - split-window -v -p 25 -c '#{pane_current_path}'

# Only show status bar when > 1 window
if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"
set-hook -g window-linked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'
set-hook -g window-unlinked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'
set-option -g status-position bottom

# Make Neovim 256 color work properly
set-option -g default-terminal "${TERM}"
set -g default-terminal "${TERM}"
# Make undercurls work properly in Neovim
# Undercurl support
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
# Underscore colours - needs tmux-3.0
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

bind-key -n C-Tab next-window
bind-key -n C-S-Tab previous-window

# Vim navications
bind-key -n 'C-left' if-shell "$is_vim" 'send-keys C-left' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-down' if-shell "$is_vim" 'send-keys C-down' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-up' if-shell "$is_vim" 'send-keys C-up' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-right' if-shell "$is_vim" 'send-keys C-right' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-left' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-down' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-up' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-right' if -F '#{pane_at_right}' '' 'select-pane -R'

# Vim resizing
bind -n 'M-left' if-shell "$is_vim" 'send-keys M-left' 'resize-pane -L 5'
bind -n 'M-down' if-shell "$is_vim" 'send-keys M-down' 'resize-pane -D 5'
bind -n 'M-up' if-shell "$is_vim" 'send-keys M-up' 'resize-pane -U 5'
bind -n 'M-right' if-shell "$is_vim" 'send-keys M-right' 'resize-pane -R 5'

bind-key -T copy-mode-vi M-left resize-pane -L 5
bind-key -T copy-mode-vi M-down resize-pane -D 5
bind-key -T copy-mode-vi M-up resize-pane -U 5
bind-key -T copy-mode-vi M-right resize-pane -R 5

